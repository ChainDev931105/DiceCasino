{
  "contractName": "WolframOracle",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "rollDice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"rollDice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/WolframOracle.sol\":\"WolframOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/WolframOracle.sol\":{\"keccak256\":\"0x3374540336cee00a42d81a80c8fc6bf1ba77521f56b06c556b2fb485100e5aaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49780c711dbdbaf71b79fb1109c770a350306e409d835492bbfff87f298625a5\",\"dweb:/ipfs/QmQsgv5XEBCU5hALLXUZ2htB3LVcbLAbAxhoJZGsqQtpMd\"]},\"project:/contracts/interface/IWolframOracle.sol\":{\"keccak256\":\"0x64b579ceedbc6918117caf4ce4b013b8e88eeb9ac27ad795aff96a1a65e80bae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91c2b64731eede10dfa961e5f7530a9c65336210b4654c1bcb212fd2998d9d65\",\"dweb:/ipfs/QmXdVZGS9XFWrMpaaPRRBNNfep7qNLbHikBRaFpGzG9Kk5\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50607780601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063837e7cc614602d575b600080fd5b600060405190815260200160405180910390f3fea26469706673582212208f02d34acf3aaa09e0f5151e2f98f34f7e56a4dc02d7fad4c96240a5a98fccd564736f6c63430008070033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063837e7cc614602d575b600080fd5b600060405190815260200160405180910390f3fea26469706673582212208f02d34acf3aaa09e0f5151e2f98f34f7e56a4dc02d7fad4c96240a5a98fccd564736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:193:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:8",
                "type": ""
              }
            ],
            "src": "14:177:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "135:182:5:-:0;;;185:30;;;;;;;;;;135:182;;;;;;",
  "deployedSourceMap": "135:182:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:91;269:7;223:91;;160:25:8;;;148:2;133:18;223:91:5;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport {IWolframOracle} from \"./interface/IWolframOracle.sol\";\r\n\r\ncontract WolframOracle is IWolframOracle {\r\n\r\n    constructor () public {\r\n    }\r\n\r\n    function rollDice() override external returns(uint256) {\r\n        return uint256(0);\r\n    }\r\n}",
  "sourcePath": "E:\\Blockchain\\20211221_Gamerse\\DiceCasino\\contracts\\WolframOracle.sol",
  "ast": {
    "absolutePath": "project:/contracts/WolframOracle.sol",
    "exportedSymbols": {
      "IWolframOracle": [
        767
      ],
      "WolframOracle": [
        759
      ]
    },
    "id": 760,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 738,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:5"
      },
      {
        "absolutePath": "project:/contracts/interface/IWolframOracle.sol",
        "file": "./interface/IWolframOracle.sol",
        "id": 740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 768,
        "src": "69:62:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 739,
              "name": "IWolframOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "77:14:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 741,
              "name": "IWolframOracle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 767,
              "src": "161:14:5"
            },
            "id": 742,
            "nodeType": "InheritanceSpecifier",
            "src": "161:14:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 759,
        "linearizedBaseContracts": [
          759,
          767
        ],
        "name": "WolframOracle",
        "nameLocation": "144:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "207:8:5",
              "statements": []
            },
            "id": 746,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:2:5"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:0:5"
            },
            "scope": 759,
            "src": "185:30:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              766
            ],
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "278:36:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "304:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "296:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 752,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "296:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "296:10:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 751,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "289:17:5"
                }
              ]
            },
            "functionSelector": "837e7cc6",
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rollDice",
            "nameLocation": "232:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "243:8:5"
            },
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:2:5"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "269:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:9:5"
            },
            "scope": 759,
            "src": "223:91:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 760,
        "src": "135:182:5",
        "usedErrors": []
      }
    ],
    "src": "33:284:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/WolframOracle.sol",
    "exportedSymbols": {
      "IWolframOracle": [
        767
      ],
      "WolframOracle": [
        759
      ]
    },
    "id": 760,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 738,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:5"
      },
      {
        "absolutePath": "project:/contracts/interface/IWolframOracle.sol",
        "file": "./interface/IWolframOracle.sol",
        "id": 740,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 760,
        "sourceUnit": 768,
        "src": "69:62:5",
        "symbolAliases": [
          {
            "foreign": {
              "id": 739,
              "name": "IWolframOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "77:14:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 741,
              "name": "IWolframOracle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 767,
              "src": "161:14:5"
            },
            "id": 742,
            "nodeType": "InheritanceSpecifier",
            "src": "161:14:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 759,
        "linearizedBaseContracts": [
          759,
          767
        ],
        "name": "WolframOracle",
        "nameLocation": "144:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 745,
              "nodeType": "Block",
              "src": "207:8:5",
              "statements": []
            },
            "id": 746,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:2:5"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:0:5"
            },
            "scope": 759,
            "src": "185:30:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              766
            ],
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "278:36:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "304:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "296:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 752,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "296:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "296:10:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 751,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "289:17:5"
                }
              ]
            },
            "functionSelector": "837e7cc6",
            "id": 758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rollDice",
            "nameLocation": "232:8:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "243:8:5"
            },
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "240:2:5"
            },
            "returnParameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "269:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "269:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:9:5"
            },
            "scope": 759,
            "src": "223:91:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 760,
        "src": "135:182:5",
        "usedErrors": []
      }
    ],
    "src": "33:284:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-22T21:15:32.457Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}